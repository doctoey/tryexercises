import { fireEvent, render, screen } from "@testing-library/react";
import { describe, it } from "vitest";
import { TodoList } from "./TodoList";

describe("TodoList", () => {
  // beforeEach(() => {
  //   render(<TodoList />);
  // });

  it("should let user type into the input field // allows typing in the input", () => {
    // 1. render component
    // 2. find input field
    // 3. fireEvent.change input ‡πÄ‡∏õ‡πá‡∏ô "Learn Vitest"
    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ input ‡∏°‡∏µ value ‡πÄ‡∏õ‡πá‡∏ô "Learn Vitest"
    render(<TodoList />);
    const input = screen.getByPlaceholderText(/New todo/i);
    fireEvent.change(input, { target: { value: "Learn Vitest" } });
    expect(input).toHaveValue("Learn Vitest");
  });

  it("should add a todo when Add button is clicked // adds a todo item when the Add button is clicked", () => {
    // 1. render component
    // 2. type "Write tests" in input
    // 3. click Add button
    // 4. ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏´‡πá‡∏ô "Write tests" ‡πÉ‡∏ô list
    render(<TodoList />);
    const input = screen.getByPlaceholderText(/New todo/i);
    fireEvent.change(input, { target: { value: "Write tests" } });
    const addButton = screen.getByRole("button", { name: /Add/i });
    fireEvent.click(addButton);
    const todoItem = screen.getByText(/Write tests/i);
    expect(todoItem).toBeInTheDocument();
    // expect(todoItem).toHaveAttribute("data-testid", "todo-item");
    // expect(todoItem).toHaveTextContent("Write tests");
  });

  it("should NOT add empty todo // does not add an empty todo item", () => {
    // 1. render component
    // 2. click Add button ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏û‡∏¥‡∏°‡∏û‡πå
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ñ‡∏π‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°
    render(<TodoList />);
    const addButton = screen.getByRole("button", { name: /Add/i });
    fireEvent.click(addButton);
    // const todoItem = screen.queryByText(/Write tests/i);
    // expect(todoItem).not.toBeInTheDocument();
    const items = screen.queryAllByTestId("todo-item");
    expect(items).toHaveLength(0);
  });

  it("should clear input after adding // clears the input field after adding a todo", () => {
    // 1. render component
    // 2. type ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    // 3. click Add
    // 4. ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ input ‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á
    render(<TodoList />);
    const input = screen.getByPlaceholderText(/New todo/i);
    fireEvent.change(input, { target: { value: "Write tests" } });
    const addButton = screen.getByRole("button", { name: /Add/i });
    fireEvent.click(addButton);
    expect(input).toHaveValue("");
  });

  it("should render multiple todos correctly // renders multiple todos correctly", () => {
    // 1. render component
    // 2. add ‡∏´‡∏•‡∏≤‡∏¢‡πÜ item
    // 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤ ul ‡∏°‡∏µ children ‡∏ï‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°
    render(<TodoList />);
    const input = screen.getByPlaceholderText(/New todo/i);
    const addButton = screen.getByRole("button", { name: /Add/i });
    fireEvent.change(input, { target: { value: "Write tests" } });
    fireEvent.click(addButton);
    fireEvent.change(input, { target: { value: "Learn Vitest" } });
    fireEvent.click(addButton);
    fireEvent.change(input, { target: { value: "Build a project" } });
    fireEvent.click(addButton);
    const todoItems = screen.getAllByTestId("todo-item");
    expect(todoItems).toHaveLength(3);
    expect(todoItems[0]).toHaveTextContent("Write tests");
    expect(todoItems[1]).toHaveTextContent("Learn Vitest");
    expect(todoItems[2]).toHaveTextContent("Build a project");
  });
});

// üí° (Optional) ‡πÉ‡∏ä‡πâ userEvent ‡πÅ‡∏ó‡∏ô fireEvent ‡∏à‡∏∞ realistic ‡∏Å‡∏ß‡πà‡∏≤
// fireEvent ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏°‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏à‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ userEvent ‡∏ó‡∏µ‡πà simulate ‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå‡πÅ‡∏•‡∏∞‡∏Ñ‡∏•‡∏¥‡∏Å‡πÅ‡∏ö‡∏ö user ‡∏à‡∏£‡∏¥‡∏á‡πÜ:
// import userEvent from "@testing-library/user-event";

// ‡πÅ‡∏ó‡∏ô fireEvent.change
// await userEvent.type(input, "Write tests");

// ‡πÅ‡∏ó‡∏ô fireEvent.click
// await userEvent.click(button);
